name: Deploy to AWS

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: 8.2
          extensions: mbstring, bcmath, ctype, fileinfo, json, tokenizer, xml
      
      - name: Cache Composer dependencies
        uses: actions/cache@v3
        with:
          path: vendor
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-composer-
      
      - name: Install dependencies
        run: composer install --no-ansi --no-interaction --no-scripts --no-suggest --prefer-dist
      
      - name: Setup environment
        run: |
          cp .env.example .env
          php artisan key:generate
      
      - name: Run migrations for tests
        run: php artisan migrate
      
      - name: Run tests
        run: php artisan test
      
      - name: Deploy to server
        env:
          DEPLOY_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
          DEPLOY_HOST: ${{ secrets.SSH_HOST }}
          DEPLOY_USER: ${{ secrets.SSH_USER }}
          DEPLOY_PATH: ${{ secrets.DEPLOY_PATH }}
        run: |
          mkdir -p ~/.ssh
          echo "$DEPLOY_KEY" > ~/.ssh/deploy_key
          chmod 600 ~/.ssh/deploy_key
          ssh-keyscan -H $DEPLOY_HOST >> ~/.ssh/known_hosts 2>/dev/null
          
          ssh -i ~/.ssh/deploy_key $DEPLOY_USER@$DEPLOY_HOST << 'EOF'
          cd $DEPLOY_PATH
          git pull origin main
          composer install --no-dev --optimize-autoloader
          php artisan migrate --force
          php artisan config:cache
          php artisan view:cache
          php artisan route:cache
          sudo systemctl restart php8.2-fpm
          echo "Deployment complete!"
          EOF
